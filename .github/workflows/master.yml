name: master

on:
  push:
    branches:
      - master

jobs:
  set_version:
    runs-on: ubuntu-latest
    steps:
    - name: create docker tag
      run: echo ::set-env name=TAG::$(echo ${{ github.sha }} | cut -c1-7)
    outputs:
      image: docker.pkg.github.com/${{ github.repository }}/spesialist:${{ env.TAG }}
  build:
    runs-on: ubuntu-latest
    needs: set_version
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: test and build
        run: ./gradlew test build
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        run: docker build . --pull -t ${{ needs.set_version.outputs.image }}
      - name: push docker image
        run: |
          docker login --username "$GITHUB_REPOSITORY" -p ${{ secrets.GITHUB_TOKEN }} https://docker.pkg.github.com
          docker push ${{ needs.set_version.outputs.image }}
  snyk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Gradle vulnerability check
      uses: snyk/actions/gradle-jdk12@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        ORG_GRADLE_PROJECT_githubUser: x-access-token
        ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: --project-name=spesialist --org=tbd-ty7 --fail-on=all
        command: monitor
  deployDev:
    name: Deploy to dev
    needs: [set_version, build, snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/dev.yml
          IMAGE: ${{ needs.set_version.outputs.image }}

  deployProd:
    name: Deploy to prod
    needs: [set_version, deployDev]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: deploy/prod.yml
          IMAGE: ${{ needs.set_version.outputs.image }}
