name: Spesialist

on:
    push:
        paths-ignore:
            - 'Dockerfile-opprydding-dev'
            - 'spesialist-opprydding-dev/**'
            - '.github/workflows/spesialist-opprydding-dev.yml'
            - 'deploy/dev-opprydding.yml'
        branches:
            - master

jobs:

    build:
        name: build docker image
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Create image name
              uses: actions/github-script@v6
              id: image_name
              with:
                result-encoding: string
                script: |
                  const tag = context.sha.substring(0, 7)
                  return `ghcr.io/${context.repo.repo}/spesialist:${tag}`

            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '17.x'

            - name: Test and build
              uses: gradle/gradle-build-action@v2
              with:
                arguments: build
              env:
                  ORG_GRADLE_PROJECT_githubUser: x-access-token
                  ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}

            - uses: docker/setup-buildx-action@v2
              with:
                install: true

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  tags: ${{ steps.image_name.outputs.result }}
                  push: true
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    snyk:
        name: check vulnerabilities
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Gradle vulnerability check
              uses: snyk/actions/gradle@master
              env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
                  ORG_GRADLE_PROJECT_githubUser: x-access-token
                  ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
              with:
                  args: --project-name=spesialist --org=tbd-ty7 --fail-on=all --configuration-matching='^runtimeClasspath'
                  command: monitor

    deployDev:
        name: deploy to dev
        needs: [set_version, build]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-gcp
                  RESOURCE: deploy/dev.yml
                  IMAGE: ${{ needs.set_version.outputs.image }}

    deployProd:
        name: deploy to prod
        needs: [set_version, build, deployDev]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-gcp
                  RESOURCE: deploy/prod.yml
                  IMAGE: ${{ needs.set_version.outputs.image }}
