# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

interface Hendelse {
    id: UUID!
    type: Hendelsetype!
}

interface Overstyring {
    ferdigstilt: Boolean!
    hendelseId: UUID!
    saksbehandler: Saksbehandler!
    timestamp: String!
}

interface Periode {
    erForkastet: Boolean!
    fom: String!
    hendelser: [Hendelse!]!
    id: UUID!
    inntektstype: Inntektstype!
    opprettet: String!
    periodetilstand: Periodetilstand!
    periodetype: Periodetype!
    skjaeringstidspunkt: String!
    tidslinje: [Dag!]!
    tom: String!
    varsler: [VarselDTO!]!
    vedtaksperiodeId: UUID!
}

interface Spennoppdrag {
    fagsystemId: String!
    linjer: [Utbetalingslinje!]!
}

interface Vilkarsgrunnlag {
    arbeidsgiverrefusjoner: [Arbeidsgiverrefusjon!]!
    id: UUID!
    inntekter: [Arbeidsgiverinntekt!]!
    omregnetArsinntekt: Float!
    skjaeringstidspunkt: String!
    sykepengegrunnlag: Float!
    vilkarsgrunnlagtype: Vilkarsgrunnlagtype!
}

type Alder {
    alderSisteSykedag: Int!
    oppfylt: Boolean!
}

type Annullering {
    saksbehandler: String!
    tidspunkt: String!
}

type Antall {
    automatisk: Int!
    manuelt: Int!
    tilgjengelig: Int!
}

type AntallOppgaver {
    antallMineSaker: Int!
    antallMineSakerPaVent: Int!
}

type Arbeidsforhold {
    sluttdato: String
    startdato: String!
    stillingsprosent: Int!
    stillingstittel: String!
}

type Arbeidsforholdoverstyring implements Overstyring {
    begrunnelse: String!
    deaktivert: Boolean!
    ferdigstilt: Boolean!
    forklaring: String!
    hendelseId: UUID!
    saksbehandler: Saksbehandler!
    skjaeringstidspunkt: String!
    timestamp: String!
}

type Arbeidsgiver {
    arbeidsforhold: [Arbeidsforhold!]!
    bransjer: [String!]!
    generasjoner: [Generasjon!]!
    ghostPerioder: [GhostPeriode!]!
    inntekterFraAordningen: [ArbeidsgiverInntekterFraAOrdningen!]!
    navn: String!
    organisasjonsnummer: String!
    overstyringer: [Overstyring!]!
}

type ArbeidsgiverInntekterFraAOrdningen {
    inntekter: [InntektFraAOrdningen!]!
    skjaeringstidspunkt: String!
}

type Arbeidsgiverinntekt {
    arbeidsgiver: String!
    deaktivert: Boolean
    omregnetArsinntekt: OmregnetArsinntekt
    sammenligningsgrunnlag: Sammenligningsgrunnlag
    skjonnsmessigFastsatt: OmregnetArsinntekt
}

type Arbeidsgiveroppdrag implements Spennoppdrag {
    fagsystemId: String!
    linjer: [Utbetalingslinje!]!
    organisasjonsnummer: String!
}

type Arbeidsgiverrefusjon {
    arbeidsgiver: String!
    refusjonsopplysninger: [Refusjonselement!]!
}

type AvsenderSystem {
    navn: String
    versjon: String
}

type BehandledeOppgaver {
    oppgaver: [BehandletOppgave!]!
    totaltAntallOppgaver: Int!
}

type BehandletOppgave {
    aktorId: String!
    antallArbeidsforhold: AntallArbeidsforhold!
    ferdigstiltAv: String
    ferdigstiltTidspunkt: String!
    id: String!
    oppgavetype: Oppgavetype!
    periodetype: Periodetype!
    personnavn: Personnavn!
}

type Behandlingsstatistikk {
    antallAnnulleringer: Int!
    beslutter: Antall!
    delvisRefusjon: Antall!
    egenAnsatt: Antall!
    enArbeidsgiver: Antall!
    faresignaler: Antall!
    flereArbeidsgivere: Antall!
    forlengelseIt: Antall!
    forlengelser: Antall!
    forstegangsbehandling: Antall!
    fortroligAdresse: Antall!
    revurdering: Antall!
    stikkprover: Antall!
    utbetalingTilArbeidsgiver: Antall!
    utbetalingTilSykmeldt: Antall!
}

type BeregnetPeriode implements Periode {
    beregningId: UUID!
    egenskaper: [Oppgaveegenskap!]!
    erForkastet: Boolean!
    fom: String!
    forbrukteSykedager: Int
    gjenstaendeSykedager: Int
    handlinger: [Handling!]!
    hendelser: [Hendelse!]!
    id: UUID!
    inntektstype: Inntektstype!
    maksdato: String!
    notater: [Notat!]!
    oppgave: OppgaveForPeriodevisning
    oppgavereferanse: String @deprecated(reason: "Oppgavereferanse b√∏r hentes fra periodens oppgave")
    opprettet: String!
    paVent: PaVent
    periodehistorikk: [PeriodeHistorikkElement!]!
    periodetilstand: Periodetilstand!
    periodetype: Periodetype!
    periodevilkar: Periodevilkar!
    risikovurdering: Risikovurdering
    skjaeringstidspunkt: String!
    tidslinje: [Dag!]!
    tom: String!
    totrinnsvurdering: Totrinnsvurdering
    utbetaling: Utbetaling!
    varsler: [VarselDTO!]!
    vedtaksperiodeId: UUID!
    vilkarsgrunnlagId: UUID
}

type Dag {
    begrunnelser: [Begrunnelse!]
    dato: String!
    grad: Float
    kilde: Kilde!
    sykdomsdagtype: Sykdomsdagtype!
    utbetalingsdagtype: Utbetalingsdagtype!
    utbetalingsinfo: Utbetalingsinfo
}

type Dagoverstyring implements Overstyring {
    begrunnelse: String!
    dager: [OverstyrtDag!]!
    ferdigstilt: Boolean!
    hendelseId: UUID!
    saksbehandler: Saksbehandler!
    timestamp: String!
}

type DokumentInntektsmelding {
    arbeidsgiverperioder: [IMPeriode!]
    avsenderSystem: AvsenderSystem
    begrunnelseForReduksjonEllerIkkeUtbetalt: String
    beregnetInntekt: Float
    bruttoUtbetalt: Float
    endringIRefusjoner: [EndringIRefusjon!]
    ferieperioder: [IMPeriode!]
    foersteFravaersdag: String
    gjenopptakelseNaturalytelser: [GjenopptakelseNaturalytelse!]
    innsenderFulltNavn: String
    innsenderTelefon: String
    inntektEndringAarsak: InntektEndringAarsak
    inntektsdato: String
    naerRelasjon: Boolean
    opphoerAvNaturalytelser: [OpphoerAvNaturalytelse!]
    refusjon: Refusjon
}

type EndringIRefusjon {
    beloep: Float
    endringsdato: String
}

type Enhet {
    id: String!
    navn: String!
}

type Faresignal {
    beskrivelse: String!
    kategori: [String!]!
}

type Generasjon {
    id: UUID!
    perioder: [Periode!]!
}

type GhostPeriode {
    deaktivert: Boolean!
    fom: String!
    id: String!
    organisasjonsnummer: String!
    skjaeringstidspunkt: String!
    tom: String!
    vilkarsgrunnlagId: UUID
}

type GjenopptakelseNaturalytelse {
    beloepPrMnd: Float
    fom: String
    naturalytelse: Naturalytelse
}

type Handling {
    begrunnelse: String
    tillatt: Boolean!
    type: Periodehandling!
}

type IMPeriode {
    fom: String
    tom: String
}

type Infotrygdutbetaling {
    dagsats: Float!
    fom: String!
    grad: String!
    organisasjonsnummer: String!
    tom: String!
    typetekst: String!
}

type InntektEndringAarsak {
    aarsak: String!
    bleKjent: String
    gjelderFra: String
    perioder: [IMPeriode!]
}

type InntektFraAOrdningen {
    maned: String!
    sum: Float!
}

type Inntektoverstyring implements Overstyring {
    ferdigstilt: Boolean!
    hendelseId: UUID!
    inntekt: OverstyrtInntekt!
    saksbehandler: Saksbehandler!
    timestamp: String!
}

type Inntektsmelding implements Hendelse {
    beregnetInntekt: Float!
    eksternDokumentId: UUID
    id: UUID!
    mottattDato: String!
    type: Hendelsetype!
}

type Kilde {
    id: UUID!
    type: Kildetype!
}

type Kommentar {
    feilregistrert_tidspunkt: String
    id: Int!
    opprettet: String!
    saksbehandlerident: String!
    tekst: String!
}

type Mutation {
    annuller(annullering: AnnulleringDataInput!): Boolean!
    feilregistrerKommentar(id: Int!): Kommentar
    feilregistrerKommentarV2(id: Int!): Kommentar
    feilregistrerNotat(id: Int!): Notat
    fjernPaVent(oppgaveId: String!): Boolean
    fjernTildeling(oppgaveId: String!): Boolean!
    innvilgVedtak(oppgavereferanse: String!): Boolean!
    leggPaVent(begrunnelse: String, frist: String!, notatTekst: String!, notatType: NotatType!, oppgaveId: String!, tildeling: Boolean!): PaVent
    leggTilKommentar(notatId: Int!, saksbehandlerident: String!, tekst: String!): Kommentar
    leggTilNotat(saksbehandlerOid: String!, tekst: String!, type: NotatType!, vedtaksperiodeId: String!): Notat
    oppdaterPerson(fodselsnummer: String!): Boolean!
    opprettAbonnement(personidentifikator: String!): Boolean!
    opprettTildeling(oppgaveId: String!): Tildeling
    overstyrArbeidsforhold(overstyring: ArbeidsforholdOverstyringHandlingInput!): Boolean!
    overstyrDager(overstyring: TidslinjeOverstyringInput!): Boolean!
    overstyrInntektOgRefusjon(overstyring: InntektOgRefusjonOverstyringInput!): Boolean!
    sendIRetur(notatTekst: String!, oppgavereferanse: String!): Boolean!
    sendTilGodkjenning(oppgavereferanse: String!): Boolean!
    sendTilInfotrygd(arsak: String!, begrunnelser: [String!]!, kommentar: String, oppgavereferanse: String!): Boolean!
    settVarselstatus(definisjonIdString: String, generasjonIdString: String!, ident: String!, varselkode: String!): VarselDTO!
    skjonnsfastsettSykepengegrunnlag(skjonnsfastsettelse: SkjonnsfastsettelseInput!): Boolean!
}

type Notat {
    feilregistrert: Boolean!
    feilregistrert_tidspunkt: String
    id: Int!
    kommentarer: [Kommentar!]!
    opprettet: String!
    saksbehandlerEpost: String!
    saksbehandlerIdent: String!
    saksbehandlerNavn: String!
    saksbehandlerOid: UUID!
    tekst: String!
    type: NotatType!
    vedtaksperiodeId: UUID!
}

type Notater {
    id: UUID!
    notater: [Notat!]!
}

type OmregnetArsinntekt {
    belop: Float!
    inntektFraAOrdningen: [InntektFraAOrdningen!]
    kilde: Inntektskilde!
    manedsbelop: Float!
}

type Oppdrag {
    annullering: Annullering
    arbeidsgiveroppdrag: Arbeidsgiveroppdrag
    personoppdrag: Personoppdrag
    status: Oppdragsstatus!
    totalbelop: Int
    type: String!
    utbetalingId: UUID!
}

type OppgaveForPeriodevisning {
    id: String!
}

type OppgaveTilBehandling {
    aktorId: String!
    antallArbeidsforhold: AntallArbeidsforhold!
    egenskaper: [Oppgaveegenskap!]!
    id: String!
    mottaker: Mottaker!
    navn: Personnavn!
    oppgavetype: Oppgavetype!
    opprettet: String!
    opprinneligSoknadsdato: String!
    periodetype: Periodetype!
    tidsfrist: String
    tildeling: Tildeling
    vedtaksperiodeId: UUID!
}

type Oppgaveegenskap {
    egenskap: Egenskap!
    kategori: Kategori!
}

type OppgaverTilBehandling {
    oppgaver: [OppgaveTilBehandling!]!
    totaltAntallOppgaver: Int!
}

type OpphoerAvNaturalytelse {
    beloepPrMnd: Float
    fom: String
    naturalytelse: Naturalytelse
}

type Opptegnelse {
    aktorId: String!
    payload: String!
    sekvensnummer: Int!
    type: Opptegnelsetype!
}

type OverstyrtDag {
    dato: String!
    fraGrad: Int
    fraType: Dagtype
    grad: Int
    type: Dagtype!
}

type OverstyrtInntekt {
    begrunnelse: String!
    forklaring: String!
    fraManedligInntekt: Float
    fraRefusjonsopplysninger: [Refusjonsopplysning!]
    manedligInntekt: Float!
    refusjonsopplysninger: [Refusjonsopplysning!]
    skjaeringstidspunkt: String!
}

type PaVent {
    begrunnelse: String
    frist: String
    oid: UUID!
}

type PeriodeHistorikkElement {
    notat_id: Int
    saksbehandler_ident: String
    timestamp: String!
    type: PeriodehistorikkType!
}

type Periodevilkar {
    alder: Alder!
    sykepengedager: Sykepengedager!
}

type Person {
    aktorId: String!
    arbeidsgivere: [Arbeidsgiver!]!
    dodsdato: String
    enhet: Enhet!
    fodselsnummer: String!
    infotrygdutbetalinger: [Infotrygdutbetaling!]
    personinfo: Personinfo!
    tildeling: Tildeling
    versjon: Int!
    vilkarsgrunnlag: [Vilkarsgrunnlag!]!
}

type Personinfo {
    adressebeskyttelse: Adressebeskyttelse!
    etternavn: String!
    fodselsdato: String
    fornavn: String!
    kjonn: Kjonn!
    mellomnavn: String
    reservasjon: Reservasjon
}

type Personnavn {
    etternavn: String!
    fornavn: String!
    mellomnavn: String
}

type Personoppdrag implements Spennoppdrag {
    fagsystemId: String!
    fodselsnummer: String!
    linjer: [Utbetalingslinje!]!
}

type Query {
    antallOppgaver: AntallOppgaver!
    behandledeOppgaverFeed(limit: Int!, offset: Int!): BehandledeOppgaver!
    behandlingsstatistikk: Behandlingsstatistikk!
    hentInntektsmelding(dokumentId: String!, fnr: String!): DokumentInntektsmelding
    hentSoknad(dokumentId: String!, fnr: String!): Soknad!
    notater(forPerioder: [String!]!): [Notater!]!
    oppdrag(fnr: String!): [Oppdrag!]!
    oppgaveFeed(filtrering: FiltreringInput!, limit: Int!, offset: Int!, sortering: [OppgavesorteringInput!]!): OppgaverTilBehandling!
    opptegnelser(sekvensId: Int): [Opptegnelse!]!
    person(aktorId: String, fnr: String): Person
}

type Refusjon {
    beloepPrMnd: Float
    opphoersdato: String
}

type Refusjonselement {
    belop: Float!
    fom: String!
    meldingsreferanseId: UUID!
    tom: String
}

type Refusjonsopplysning {
    belop: Float!
    fom: String!
    tom: String
}

type Reservasjon {
    kanVarsles: Boolean!
    reservert: Boolean!
}

type Risikovurdering {
    funn: [Faresignal!]
    kontrollertOk: [Faresignal!]!
}

type Saksbehandler {
    ident: String
    navn: String!
}

type Sammenligningsgrunnlag {
    belop: Float!
    inntektFraAOrdningen: [InntektFraAOrdningen!]!
}

type Simulering {
    fagsystemId: String!
    perioder: [Simuleringsperiode!]
    tidsstempel: String!
    totalbelop: Int
    utbetalingslinjer: [Simuleringslinje!]!
}

type Simuleringsdetaljer {
    antallSats: Int!
    belop: Int!
    fom: String!
    klassekode: String!
    klassekodebeskrivelse: String!
    konto: String!
    refunderesOrgNr: String!
    sats: Float!
    tilbakeforing: Boolean!
    tom: String!
    typeSats: String!
    uforegrad: Int!
    utbetalingstype: String!
}

type Simuleringslinje {
    dagsats: Int!
    fom: String!
    grad: Int!
    tom: String!
}

type Simuleringsperiode {
    fom: String!
    tom: String!
    utbetalinger: [Simuleringsutbetaling!]!
}

type Simuleringsutbetaling {
    detaljer: [Simuleringsdetaljer!]!
    feilkonto: Boolean!
    forfall: String!
    mottakerId: String!
    mottakerNavn: String!
}

type SkjonnsfastsattSykepengegrunnlag {
    arlig: Float!
    arsak: String!
    begrunnelse: String
    begrunnelseFritekst: String
    begrunnelseKonklusjon: String
    begrunnelseMal: String
    fraArlig: Float
    skjaeringstidspunkt: String!
    type: Skjonnsfastsettingstype
}

type Soknad {
    arbeidGjenopptatt: String
    egenmeldingsdagerFraSykmelding: [String!]
    soknadsperioder: [Soknadsperioder!]
    sporsmal: [Sporsmal!]
    sykmeldingSkrevet: String
    type: Soknadstype
}

type SoknadArbeidsgiver implements Hendelse {
    eksternDokumentId: UUID
    fom: String!
    id: UUID!
    rapportertDato: String!
    sendtArbeidsgiver: String!
    tom: String!
    type: Hendelsetype!
}

type SoknadArbeidsledig implements Hendelse {
    eksternDokumentId: UUID
    fom: String!
    id: UUID!
    rapportertDato: String!
    sendtNav: String!
    tom: String!
    type: Hendelsetype!
}

type SoknadFrilans implements Hendelse {
    eksternDokumentId: UUID
    fom: String!
    id: UUID!
    rapportertDato: String!
    sendtNav: String!
    tom: String!
    type: Hendelsetype!
}

type SoknadNav implements Hendelse {
    eksternDokumentId: UUID
    fom: String!
    id: UUID!
    rapportertDato: String!
    sendtNav: String!
    tom: String!
    type: Hendelsetype!
}

type SoknadSelvstendig implements Hendelse {
    eksternDokumentId: UUID
    fom: String!
    id: UUID!
    rapportertDato: String!
    sendtNav: String!
    tom: String!
    type: Hendelsetype!
}

type Soknadsperioder {
    faktiskGrad: Int
    fom: String!
    grad: Int
    sykmeldingsgrad: Int
    tom: String!
}

type Sporsmal {
    kriterieForVisningAvUndersporsmal: Visningskriterium
    sporsmalstekst: String
    svar: [Svar!]
    svartype: Svartype
    tag: String
    undersporsmal: [Sporsmal!]
    undertekst: String
}

type Svar {
    verdi: String
}

type Sykepengedager {
    forbrukteSykedager: Int
    gjenstaendeSykedager: Int
    maksdato: String!
    oppfylt: Boolean!
    skjaeringstidspunkt: String!
}

type Sykepengegrunnlagsgrense {
    grense: Int!
    grunnbelop: Int!
    virkningstidspunkt: String!
}

type Sykepengegrunnlagskjonnsfastsetting implements Overstyring {
    ferdigstilt: Boolean!
    hendelseId: UUID!
    saksbehandler: Saksbehandler!
    skjonnsfastsatt: SkjonnsfastsattSykepengegrunnlag!
    timestamp: String!
}

type Sykmelding implements Hendelse {
    fom: String!
    id: UUID!
    rapportertDato: String!
    tom: String!
    type: Hendelsetype!
}

type Tildeling {
    epost: String!
    navn: String!
    oid: UUID!
}

type Totrinnsvurdering {
    beslutter: UUID
    erBeslutteroppgave: Boolean!
    erRetur: Boolean!
    saksbehandler: UUID
}

type UberegnetPeriode implements Periode {
    erForkastet: Boolean!
    fom: String!
    hendelser: [Hendelse!]!
    id: UUID!
    inntektstype: Inntektstype!
    notater: [Notat!]!
    opprettet: String!
    periodetilstand: Periodetilstand!
    periodetype: Periodetype!
    skjaeringstidspunkt: String!
    tidslinje: [Dag!]!
    tom: String!
    varsler: [VarselDTO!]!
    vedtaksperiodeId: UUID!
}

type UberegnetVilkarsprovdPeriode implements Periode {
    erForkastet: Boolean!
    fom: String!
    hendelser: [Hendelse!]!
    id: UUID!
    inntektstype: Inntektstype!
    notater: [Notat!]!
    opprettet: String!
    periodetilstand: Periodetilstand!
    periodetype: Periodetype!
    skjaeringstidspunkt: String!
    tidslinje: [Dag!]!
    tom: String!
    varsler: [VarselDTO!]!
    vedtaksperiodeId: UUID!
    vilkarsgrunnlagId: UUID
}

type Utbetaling {
    arbeidsgiverFagsystemId: String!
    arbeidsgiverNettoBelop: Int!
    arbeidsgiversimulering: Simulering
    id: UUID!
    personFagsystemId: String!
    personNettoBelop: Int!
    personsimulering: Simulering
    status: Utbetalingstatus!
    type: Utbetalingtype!
    vurdering: Vurdering
}

type Utbetalingsinfo {
    arbeidsgiverbelop: Int
    inntekt: Int
    personbelop: Int
    refusjonsbelop: Int
    totalGrad: Float
    utbetaling: Int
}

type Utbetalingslinje {
    fom: String!
    tom: String!
    totalbelop: Int!
}

type VarselDTO {
    definisjonId: UUID!
    forklaring: String
    generasjonId: UUID!
    handling: String
    kode: String!
    opprettet: String!
    tittel: String!
    vurdering: VarselvurderingDTO
}

type VarselvurderingDTO {
    ident: String!
    status: Varselstatus!
    tidsstempel: String!
}

type VilkarsgrunnlagInfotrygd implements Vilkarsgrunnlag {
    arbeidsgiverrefusjoner: [Arbeidsgiverrefusjon!]!
    id: UUID!
    inntekter: [Arbeidsgiverinntekt!]!
    omregnetArsinntekt: Float!
    skjaeringstidspunkt: String!
    sykepengegrunnlag: Float!
    vilkarsgrunnlagtype: Vilkarsgrunnlagtype!
}

type VilkarsgrunnlagSpleis implements Vilkarsgrunnlag {
    antallOpptjeningsdagerErMinst: Int!
    arbeidsgiverrefusjoner: [Arbeidsgiverrefusjon!]!
    avviksprosent: Float
    grunnbelop: Int!
    id: UUID!
    inntekter: [Arbeidsgiverinntekt!]!
    omregnetArsinntekt: Float!
    oppfyllerKravOmMedlemskap: Boolean
    oppfyllerKravOmMinstelonn: Boolean!
    oppfyllerKravOmOpptjening: Boolean!
    opptjeningFra: String!
    sammenligningsgrunnlag: Float
    skjaeringstidspunkt: String!
    skjonnsmessigFastsattAarlig: Float
    sykepengegrunnlag: Float!
    sykepengegrunnlagsgrense: Sykepengegrunnlagsgrense!
    vilkarsgrunnlagtype: Vilkarsgrunnlagtype!
}

type Vurdering {
    automatisk: Boolean!
    godkjent: Boolean!
    ident: String!
    tidsstempel: String!
}

enum Adressebeskyttelse {
    Fortrolig
    StrengtFortrolig
    StrengtFortroligUtland
    Ugradert
    Ukjent
}

enum AntallArbeidsforhold {
    ET_ARBEIDSFORHOLD
    FLERE_ARBEIDSFORHOLD
}

enum Begrunnelse {
    ANDREYTELSER
    EGENMELDING_UTENFOR_ARBEIDSGIVERPERIODE
    ETTER_DODSDATO
    MANGLER_MEDLEMSKAP
    MANGLER_OPPTJENING
    MINIMUM_INNTEKT
    MINIMUM_INNTEKT_OVER_67
    MINIMUM_SYKDOMSGRAD
    OVER_70
    SYKEPENGEDAGER_OPPBRUKT
    SYKEPENGEDAGER_OPPBRUKT_OVER_67
    UKJENT
}

enum Dagtype {
    AAPdag
    ArbeidIkkeGjenopptattDag
    Arbeidsdag
    Avvistdag
    Dagpengerdag
    Egenmeldingsdag
    Feriedag
    Foreldrepengerdag
    Helg
    Omsorgspengerdag
    Opplaringspengerdag
    Permisjonsdag
    Pleiepengerdag
    Svangerskapspengerdag
    Sykedag
    SykedagNav
}

enum Egenskap {
    BESLUTTER
    DELVIS_REFUSJON
    EGEN_ANSATT
    EN_ARBEIDSGIVER
    FLERE_ARBEIDSGIVERE
    FORLENGELSE
    FORSTEGANGSBEHANDLING
    FORTROLIG_ADRESSE
    HASTER
    INFOTRYGDFORLENGELSE
    INGEN_UTBETALING
    OVERGANG_FRA_IT
    PA_VENT
    RETUR
    REVURDERING
    RISK_QA
    SKJONNSFASTSETTELSE
    SOKNAD
    SPESIALSAK
    STIKKPROVE
    STRENGT_FORTROLIG_ADRESSE
    TILBAKEDATERT
    UTBETALING_TIL_ARBEIDSGIVER
    UTBETALING_TIL_SYKMELDT
    UTLAND
    VERGEMAL
}

enum Hendelsetype {
    INNTEKTSMELDING
    NY_SOKNAD
    SENDT_SOKNAD_ARBEIDSGIVER
    SENDT_SOKNAD_ARBEIDSLEDIG
    SENDT_SOKNAD_FRILANS
    SENDT_SOKNAD_NAV
    SENDT_SOKNAD_SELVSTENDIG
    UKJENT
}

enum Inntektskilde {
    AORDNINGEN
    IKKE_RAPPORTERT
    INFOTRYGD
    INNTEKTSMELDING
    SAKSBEHANDLER
    SKJONNSMESSIG_FASTSATT
}

enum Inntektstype {
    ENARBEIDSGIVER
    FLEREARBEIDSGIVERE
}

enum Kategori {
    Inntektskilde
    Mottaker
    Oppgavetype
    Periodetype
    Status
    Ukategorisert
}

enum Kildetype {
    INNTEKTSMELDING
    SAKSBEHANDLER
    SOKNAD
    SYKMELDING
    UKJENT
}

enum Kjonn {
    Kvinne
    Mann
    Ukjent
}

enum Mottaker {
    ARBEIDSGIVER
    BEGGE
    INGEN
    SYKMELDT
}

enum Naturalytelse {
    AKSJERGRUNNFONDSBEVISTILUNDERKURS
    ANNET
    BEDRIFTSBARNEHAGEPLASS
    BESOEKSREISERHJEMMETANNET
    BIL
    BOLIG
    ELEKTRONISKKOMMUNIKASJON
    FRITRANSPORT
    INNBETALINGTILUTENLANDSKPENSJONSORDNING
    KOSTBESPARELSEIHJEMMET
    KOSTDAGER
    KOSTDOEGN
    LOSJI
    OPSJONER
    RENTEFORDELLAAN
    SKATTEPLIKTIGDELFORSIKRINGER
    TILSKUDDBARNEHAGEPLASS
    UKJENT
    YRKEBILTJENESTLIGBEHOVKILOMETER
    YRKEBILTJENESTLIGBEHOVLISTEPRIS
}

enum NotatType {
    Generelt
    PaaVent
    Retur
}

enum Oppdragsstatus {
    ANNULLERT
    FORKASTET
    GODKJENT
    GODKJENT_UTEN_UTBETALING
    IKKE_GODKJENT
    IKKE_UTBETALT
    NY
    OVERFORT
    SENDT
    UTBETALING_FEILET
    UTBETALT
}

enum Oppgavetype {
    DELVIS_REFUSJON
    FORTROLIG_ADRESSE
    INGEN_UTBETALING
    REVURDERING
    RISK_QA
    SOKNAD
    STIKKPROVE
    UTBETALING_TIL_ARBEIDSGIVER
    UTBETALING_TIL_SYKMELDT
}

enum Opptegnelsetype {
    FERDIGBEHANDLET_GODKJENNINGSBEHOV
    NY_SAKSBEHANDLEROPPGAVE
    PERSONDATA_OPPDATERT
    REVURDERING_AVVIST
    REVURDERING_FERDIGBEHANDLET
    UTBETALING_ANNULLERING_FEILET
    UTBETALING_ANNULLERING_OK
}

enum Periodehandling {
    AVVISE
    UTBETALE
}

enum PeriodehistorikkType {
    FJERN_FRA_PA_VENT
    TOTRINNSVURDERING_ATTESTERT
    TOTRINNSVURDERING_RETUR
    TOTRINNSVURDERING_TIL_GODKJENNING
    VEDTAKSPERIODE_REBEREGNET
}

enum Periodetilstand {
    AnnulleringFeilet
    Annullert
    ForberederGodkjenning
    IngenUtbetaling
    ManglerInformasjon
    RevurderingFeilet
    TilAnnullering
    TilGodkjenning
    TilInfotrygd
    TilSkjonnsfastsettelse
    TilUtbetaling
    Ukjent
    UtbetalingFeilet
    Utbetalt
    UtbetaltVenterPaEnAnnenPeriode
    VenterPaEnAnnenPeriode
}

enum Periodetype {
    FORLENGELSE
    FORSTEGANGSBEHANDLING
    INFOTRYGDFORLENGELSE
    OVERGANG_FRA_IT
}

enum SkjonnsfastsettelseType {
    ANNET
    OMREGNET_ARSINNTEKT
    RAPPORTERT_ARSINNTEKT
}

enum Skjonnsfastsettingstype {
    ANNET
    OMREGNET_ARSINNTEKT
    RAPPORTERT_ARSINNTEKT
}

enum Soknadstype {
    Annet_arbeidsforhold
    Arbeidsledig
    Arbeidstaker
    Behandlingsdager
    Gradert_reisetilskudd
    Opphold_utland
    Reisetilskudd
    Selvstendig_og_frilanser
    UKJENT
}

enum Sorteringsnokkel {
    OPPRETTET
    SOKNAD_MOTTATT
    TIDSFRIST
    TILDELT_TIL
}

enum Svartype {
    BEKREFTELSESPUNKTER
    BELOP
    CHECKBOX
    CHECKBOX_GRUPPE
    CHECKBOX_PANEL
    COMBOBOX_MULTI
    COMBOBOX_SINGLE
    DATO
    DATOER
    FRITEKST
    IKKE_RELEVANT
    INFO_BEHANDLINGSDAGER
    JA_NEI
    KILOMETER
    KVITTERING
    LAND
    PERIODE
    PERIODER
    PROSENT
    RADIO
    RADIO_GRUPPE
    RADIO_GRUPPE_TIMER_PROSENT
    RADIO_GRUPPE_UKEKALENDER
    TALL
    TIMER
    UKJENT
}

enum Sykdomsdagtype {
    ANDRE_YTELSER_AAP
    ANDRE_YTELSER_DAGPENGER
    ANDRE_YTELSER_FORELDREPENGER
    ANDRE_YTELSER_OMSORGSPENGER
    ANDRE_YTELSER_OPPLARINGSPENGER
    ANDRE_YTELSER_PLEIEPENGER
    ANDRE_YTELSER_SVANGERSKAPSPENGER
    ARBEIDIKKEGJENOPPTATTDAG
    ARBEIDSDAG
    ARBEIDSGIVERDAG
    AVSLATT
    FERIEDAG
    FORELDET_SYKEDAG
    FRISK_HELGEDAG
    PERMISJONSDAG
    SYKEDAG
    SYKEDAG_NAV
    SYK_HELGEDAG
    UBESTEMTDAG
}

enum Utbetalingsdagtype {
    ARBEIDSDAG
    ARBEIDSGIVERPERIODEDAG
    AVVIST_DAG
    FERIEDAG
    FORELDET_DAG
    HELGEDAG
    NAVDAG
    NAVHELGDAG
    UKJENT_DAG
}

enum Utbetalingstatus {
    ANNULLERT
    FORKASTET
    GODKJENT
    GODKJENTUTENUTBETALING
    IKKEGODKJENT
    OVERFORT
    SENDT
    UBETALT
    UKJENT
    UTBETALINGFEILET
    UTBETALT
}

enum Utbetalingtype {
    ANNULLERING
    ETTERUTBETALING
    FERIEPENGER
    REVURDERING
    UKJENT
    UTBETALING
}

enum Varselstatus {
    AKTIV
    AVVIST
    GODKJENT
    VURDERT
}

enum Vilkarsgrunnlagtype {
    INFOTRYGD
    SPLEIS
    UKJENT
}

enum Visningskriterium {
    CHECKED
    JA
    NEI
    UKJENT
}

"class java.util.UUID"
scalar UUID

input AnnulleringDataInput {
    aktorId: String!
    begrunnelser: [String!]!
    fagsystemId: String
    fodselsnummer: String!
    kommentar: String
    organisasjonsnummer: String
    utbetalingId: String
}

input ArbeidsforholdOverstyringHandlingInput {
    aktorId: String!
    fodselsnummer: String!
    overstyrteArbeidsforhold: [OverstyringArbeidsforholdInput!]!
    skjaringstidspunkt: String!
}

input FiltreringInput {
    egenskaper: [OppgaveegenskapInput!]!
    egneSaker: Boolean!
    egneSakerPaVent: Boolean!
    ekskluderteEgenskaper: [OppgaveegenskapInput!]
    ingenUkategoriserteEgenskaper: Boolean!
    tildelt: Boolean
}

input InntektOgRefusjonOverstyringInput {
    aktorId: String!
    arbeidsgivere: [OverstyringArbeidsgiverInput!]!
    fodselsnummer: String!
    skjaringstidspunkt: String!
}

input LovhjemmelInput {
    bokstav: String
    ledd: String
    lovverk: String!
    lovverksversjon: String!
    paragraf: String!
}

input OppgaveegenskapInput {
    egenskap: Egenskap!
    kategori: Kategori!
}

input OppgavesorteringInput {
    nokkel: Sorteringsnokkel!
    stigende: Boolean!
}

input OverstyringArbeidsforholdInput {
    begrunnelse: String!
    deaktivert: Boolean!
    forklaring: String!
    lovhjemmel: LovhjemmelInput
    orgnummer: String!
}

input OverstyringArbeidsgiverInput {
    begrunnelse: String!
    forklaring: String!
    fraManedligInntekt: Float!
    fraRefusjonsopplysninger: [OverstyringRefusjonselementInput!]
    lovhjemmel: LovhjemmelInput
    manedligInntekt: Float!
    organisasjonsnummer: String!
    refusjonsopplysninger: [OverstyringRefusjonselementInput!]
}

input OverstyringDagInput {
    dato: String!
    fraGrad: Int
    fraType: String!
    grad: Int
    lovhjemmel: LovhjemmelInput
    type: String!
}

input OverstyringRefusjonselementInput {
    belop: Float!
    fom: String!
    tom: String
}

input SkjonnsfastsettelseArbeidsgiverInput {
    arlig: Float!
    arsak: String!
    begrunnelseFritekst: String
    begrunnelseKonklusjon: String
    begrunnelseMal: String
    fraArlig: Float!
    initierendeVedtaksperiodeId: String
    lovhjemmel: LovhjemmelInput
    organisasjonsnummer: String!
    type: SkjonnsfastsettelseType!
}

input SkjonnsfastsettelseInput {
    aktorId: String!
    arbeidsgivere: [SkjonnsfastsettelseArbeidsgiverInput!]!
    fodselsnummer: String!
    skjaringstidspunkt: String!
}

input TidslinjeOverstyringInput {
    aktorId: String!
    begrunnelse: String!
    dager: [OverstyringDagInput!]!
    fodselsnummer: String!
    organisasjonsnummer: String!
    vedtaksperiodeId: String!
}
